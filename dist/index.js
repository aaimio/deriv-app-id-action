module.exports=(()=>{var __webpack_modules__={456:(e,t,r)=>{const n=r(105);const s=r(82);const{Octokit:i}=r(667);const a=r(438);const p=r(864);const o=(...e)=>console.log(...e);const u=(...e)=>console.warn(...e);class AppIdGenerator{authorise(){return new Promise(async e=>{o("Authorising...");const t=await this.resolveApiRequest("authorize",{authorize:n.getInput("DERIV_API_TOKEN")});if(!t)return e(false);o("Done authorising.\n");e(t)})}createApp(e){return new Promise(async t=>{o("Unable to find recyclable App ID. Generating new one...");o("App options",{...e});const r=await this.resolveApiRequest("appRegister",{app_register:1,...e});if(!r)return t(false);o(`Done generating App ID (${r.app_id}).\n`);t(r)})}getCreatedApps(){return new Promise(async e=>{o("Retrieving existing App IDs...");const t=await this.resolveApiRequest("appList",{app_list:1});if(!t)return e(false);t.forEach(e=>{if(e.github){o(`> ${e.redirect_uri} (${e.app_id})`)}});o("Done retrieving App IDs.\n");e(t)})}getOpenPullRequests(){return new Promise(async e=>{o("Retrieving open pull requests...");const t=new i({userAgent:"App ID Generator"});const r=[];let n=1;while(true){try{const i=await t.pulls.list({...s.context.repo,state:"open",per_page:100,page:n});if(i.data.length){r.push(...i.data);n++;continue}r.forEach(e=>o(`- ${e.html_url}`));o(`Done retrieving ${r.length} open pull requests.\n`);e(r);break}catch(t){u(t);e(false);break}}})}resolveApiRequest(e,t={}){return new Promise(r=>{this.api[e](t).then(e=>{r(e[e.msg_type])}).catch(e=>{u(`${e.error.message} (${e.error.code})`);r(false)})})}async runAction(){return new Promise(async(e,t)=>{const{issue:r}=s.context.payload;const i=n.getInput("vercel_preview_url");const c=Number(n.getInput("DERIV_APP_ID"));const _=await this.getOpenPullRequests();if(!_)return t();const l=new p(`wss://frontend.binaryws.com/websockets/v3?app_id=${c}&brand=deriv&lang=EN`);l.addEventListener("error",u);this.api=new a({app_id:c,connection:l});const d=await this.authorise();if(!d)return t();const m=await this.getCreatedApps();if(!m)return t();const h=m.find(e=>e.github===r.pull_request.html_url&&e.redirect_uri!==i);if(!h){const t=m.find(e=>e.github===r.pull_request.html_url&&e.redirect_uri===i);if(t){o("There was an existing App ID for this URL. No action will be taken as a comment should have already been posted.\n");n.setOutput("pr_url",r.pull_request.html_url);n.setOutput("pr_number",r.number);n.setOutput("app_id",A.app_id);n.setOutput("should_post_comment",false);e()}}const g=()=>{const e=_.map(e=>e.html_url);return m.find(t=>t.github&&!e.includes(t.github))};const w=h||g();const b=r.title.replace(/[^A-Za-z0-9 ]/g,"").substring(0,35);const f={name:`${b} PR${r.number}`,redirect_uri:i,github:r.pull_request.html_url,scopes:["read","trade","trading_information","payments","admin"]};const A=w?await this.updateApp(w.app_id,f):await this.createApp(f);if(!A)return t();n.setOutput("pr_url",r.pull_request.html_url);n.setOutput("pr_number",r.number);n.setOutput("app_id",A.app_id);n.setOutput("should_post_comment",true);e()})}updateApp(e,t){return new Promise(async r=>{o(`Attempting to recycle App ID ${e}...`);o("App options",{app_id:e,...t});const n=await this.resolveApiRequest("appUpdate",{app_update:e,...t});if(!n)return r(false);o(`Done recycling App ID ${e}. Stay green!\n`);r(n)})}}(async()=>{const e=n.getInput("max_retries");for(let t=1;t<=e;t++){try{const r=new AppIdGenerator;await r.runAction();process.exit(0)}catch(r){u(`An error occured retrying (${t}/${e})...`)}}n.setFailed("Exceeded maximum amount of retries. Aborting.");process.exit(1)})()},105:module=>{module.exports=eval("require")("@actions/core")},82:module=>{module.exports=eval("require")("@actions/github")},438:module=>{module.exports=eval("require")("@deriv/deriv-api/dist/DerivAPIBasic")},667:module=>{module.exports=eval("require")("@octokit/action")},864:module=>{module.exports=eval("require")("ws")}};var __webpack_module_cache__={};function __webpack_require__(e){if(__webpack_module_cache__[e]){return __webpack_module_cache__[e].exports}var t=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e](t,t.exports,__webpack_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return t.exports}__webpack_require__.ab=__dirname+"/";return __webpack_require__(456)})();